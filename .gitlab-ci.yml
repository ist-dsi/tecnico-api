image: dockerhub.dsi.tecnico.ulisboa.pt/fenix-framework/docker/java-fenix-framework:jdk8-node16

cache:
  paths:
    - .m2/repository/
    - target/
    - openapi/node_modules/

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

# Avoid duplicate pipelines on merge requests
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

stages:
  - Install and Lint
  # - Test
  - Deploy Pages
  - Release
  - Notify

Install:
  stage: Install and Lint
  before_script:
    - cp -R /opt/config_m2/. $CI_PROJECT_DIR/.m2
    - export MAVEN_REPO_USER=$NEXUS_USERNAME
    - export MAVEN_REPO_PASS=$NEXUS_PASSWORD
    - export MAVEN_REPO_ID=dsi-maven-artifacts
  script:
    - mvn -s $CI_PROJECT_DIR/.m2/settings.xml clean install -Dmaven.test.skip=true

Lint:
  stage: Install and Lint
  before_script:
    - cp -R /opt/config_m2/. $CI_PROJECT_DIR/.m2
    - export MAVEN_REPO_USER=$NEXUS_USERNAME
    - export MAVEN_REPO_PASS=$NEXUS_PASSWORD
    - export MAVEN_REPO_ID=dsi-maven-artifacts
  script:
    - mvn -s $CI_PROJECT_DIR/.m2/settings.xml clean formatter:validate -Dmaven.test.skip=true

Validate OpenAPI Schema:
  stage: Install and Lint
  script:
    - cd $CI_PROJECT_DIR/openapi
    - npm ci
    - npm run validate

# Test:
#   stage: Test
#   script:
#     - mvn test

Release:
  stage: Release
  before_script:
    - cp -R /opt/config_m2/. $CI_PROJECT_DIR/.m2
    - export MAVEN_REPO_USER=$NEXUS_USERNAME
    - export MAVEN_REPO_PASS=$NEXUS_PASSWORD
    - export MAVEN_REPO_ID=dsi-maven-artifacts
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@repo.dsi.tecnico.ulisboa.pt/tools/release-army-knife.git
    - cd release-army-knife
    - npm install
    - cd ..
    - mvn help:evaluate
    - VERSION=$(echo '${project.version}' | mvn help:evaluate | grep -v '^[[]')
    - if [[ v$VERSION != $CI_COMMIT_TAG ]]; then echo "Version v$VERSION in pom.xml diferent from $CI_COMMIT_TAG tag" && exit 1; fi
  script:
    - mvn -s $CI_PROJECT_DIR/.m2/settings.xml --batch-mode deploy  -Dmaven.test.skip=true
    - node release-army-knife/release.js $CI_PROJECT_ID $CI_COMMIT_TAG $REPO_API_ACCESS_TOKEN
  only:
    - tags

Notify:
  stage: Notify
  before_script:
    - cp -R /opt/config_m2/. $CI_PROJECT_DIR/.m2
    - export MAVEN_REPO_USER=$NEXUS_USERNAME
    - export MAVEN_REPO_PASS=$NEXUS_PASSWORD
    - export MAVEN_REPO_ID=dsi-maven-artifacts
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@repo.dsi.tecnico.ulisboa.pt/tools/release-army-knife.git
    - cd release-army-knife
    - npm install
    - cd ..
    - mvn help:evaluate
    - VERSION=$(echo '${project.version}' | mvn help:evaluate | grep -v '^[[]')
    - if [[ v$VERSION != $CI_COMMIT_TAG ]]; then echo "Version v$VERSION in pom.xml diferent from $CI_COMMIT_TAG tag" && exit 1; fi
  script:
    - node release-army-knife/notify-mattermost.js $CI_PROJECT_ID $CI_COMMIT_TAG $REPO_API_ACCESS_TOKEN $CHAT_HOOK
  only:
    - tags

pages:
  stage: Deploy Pages
  cache:
    paths:
      - website/node_modules/
  script:
    - cd website
    - npm ci
    - npm run build
    - cd ..
    - cp -r website/public public/
    # Optional: this gzips all files, so GitLab can serve compressed assets.
    - gzip -k -6 $(find public -type f)
  artifacts:
    paths:
      - public/
  rules:
    # Only publish to pages automatically when a tag is created.
    # Changing the website between tags requires manual action, to avoid
    # publishing documentation that is not yet in production.
    - if: $CI_COMMIT_TAG
      when: on_success
    - changes:
        - website/**/*
      when: manual
      allow_failure: true # allow pipeline to success even if this isn't triggered
    - when: never
